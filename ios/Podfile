# ✅ Firebase 관련 옵션 (target 밖, 맨 위에 선언)
$RNFirebaseAnalyticsWithoutAdIdSupport = true
$RNFirebaseAnalyticsEnableAdSupport = true
$RNFirebaseAsStaticFramework = true

require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")

def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native-permissions/scripts/setup.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '16.4'
prepare_react_native_project!

setup_permissions([
  'Camera',
  'Notifications'
]);

use_frameworks! :linkage => :static

target 'TugboatA2' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'TugboatA2Tests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath]
    )
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['SWIFT_VERSION'] = '5.0'
      end
    end
  end
end
